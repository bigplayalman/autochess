@import "./heroes.scss";
@import "./general.scss";
@import "./menu.scss";
$square-mobile: calc(100vw/8);
$square-synergy: calc(100vw/4);
html,
body,
.container {
  width: 100%;
  height: 100%;
}

#root {
  height: 100vh;
}

.container {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr auto;
  position: relative;
}

@media (min-width: 927px) {
  main {
    overflow: auto;
  }
  .container {
    .hero-list-container {
      width: 80%;
    }
    .hero-list {
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr))
    }
  }

}

main {
  width: 98vw;
  padding: 1vw;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  .synergy-list-container {
    min-width: 63%;
  }
  .chessboard-container {
    min-width: 63%;
  }
  > * {
    min-width: 32%;
    padding: 1%;
    /* value to use above 900px */
    width: calc((900px - 98%) * 900);
    /* 900px "breakpoint" */
    max-width: 98%;
    /* value to use below 900px */
    &:last-child {
      position: relative;
    }
    &:last-child::after {
      /**
       * This is the second part of the hack. It creates
       * an invisible element on the last child that
       * forces a space between the child and the right
       * edge of the container.
       */
      display: block;
      width: 11px;
      height: 1px;
      position: absolute;
      top: 0;
      left: 100%;
      visibility: hidden;
      content: "";
    }
  }
}

.hidden {
  display: none;
}

.hero-list-container {
  position: absolute;
  right: 0;
  top: 58px;
  height: calc(100vh - 58px - 56px);
  overflow: scroll;
}

.chessboard {
  display: grid;
  grid-template-columns: repeat(8, 12.5%);
  .square {
    min-height: 40px;
    height: 12.5vw;
    max-height: 100px;
  }
}

.focus-container {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 10px;
  padding: 10px;
  width: calc(100% - 20px);
  text-transform: capitalize;
  >* {
    >div {
      border: 2px solid;
      padding: 5px;
      display: inline-block;
    }
  }
}

.hero-list {
  padding: 10px;
  display: grid;
  grid-template-columns: 1fr;
  gap: 10px;
}

.synergy-list {
  display: flex;
  flex-flow: row wrap;
}

.synergy-item {
  display: flex;
  flex-flow: column wrap;
  justify-content: center;
  align-items: center;
  .synergy-item-count {
    width: 80px;
    height: 80px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

.synergy-item-body {
  display: flex;
  flex-flow: column wrap;
  >* {
    flex: 1 1;
  }
}
